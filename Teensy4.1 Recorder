#include "SdFat.h"

#ifndef SDCARD_SS_PIN
const uint8_t SD_CS_PIN = SS;
#else  // SDCARD_SS_PIN
// Assume built-in SD is used.
const uint8_t SD_CS_PIN = SDCARD_SS_PIN;
#endif  // SDCARD_SS_PIN

#define SD_FAT_TYPE 3
#if SD_FAT_TYPE == 0
SdFat sd;
File file;
#elif SD_FAT_TYPE == 1
SdFat32 sd;
File32 file;
#elif SD_FAT_TYPE == 2
SdExFat sd;
ExFile file;
#elif SD_FAT_TYPE == 3
SdFs sd;
FsFile file;
#else  // SD_FAT_TYPE
#error Invalid SD_FAT_TYPE
#endif  // SD_FAT_TYPE

void setup(){
  while (!sd.begin(SdioConfig(FIFO_SDIO))) {}
  file = sd.open("data.txt", FILE_WRITE);
  if (file) {
    file.print("micros()");
    file.print("\t");
    file.print("A");
    file.print("\t");
    file.println("B");
  }
    file.close();
}

void loop(){
  file = sd.open("data.txt", FILE_WRITE);
  if (file) {
  for (int i=0; i<256; i++){
    file.print(micros());
    file.print("\t");
    file.print(analogRead(A1));
    file.print("\t");
    file.println(analogRead(A3));
    delayMicroseconds(63);}
    file.close();
  }
}
